#include <iostream>
#include <cstdlib>
#include <ctime>
#include <cstring>
using namespace std;

// Moi ô (Cell) trong bang
struct Cell {
    bool laMin;
    bool daDuocMo;
    int cacMinXungQuanh;
};
Cell board[10][10]; 

// Danh sach lien ket don
struct Node {
    Cell data;
    Node *next;
};

// Danh sach lien ket cac o da mo
struct OpenCell {
    int hang, cot;
    OpenCell *next; 
};

// Cau truc  nguoi choi
struct Player {
    char name[50];
    int score;
    Player *left;  
    Player *right; 
};


// Them ngchoi vao danh sach
Player *insertPlayer(Player *root, char ten[], int diem) {
    if (root == NULL) { 
        Player *p = new Player;   
        strcpy(p->name, ten);     
        p->score = diem;          
        p->left = p->right = NULL;
        return p;                 
    }
    if (diem < root->score)
        root->left = insertPlayer(root->left, ten, diem);
    else
        root->right = insertPlayer(root->right, ten, diem);
    return root; // tra lai cay sau khi them
}

// In danh sach ngchoi theo thu tu tang diem
void inOrder(Player *root) {
    if (root != NULL) { 
        inOrder(root->left);
        cout << root->name << " - " << root->score << endl; 
        inOrder(root->right);
    }
}
//Khoi tao ra ban co
void taoBanCo() {
    srand(time(0));  
    for (int i = 0; i < 10; i++) { 
        for (int j = 0; j < 10; j++) {
            board[i][j].laMin = false; 
            board[i][j].daDuocMo = false;
            board[i][j].cacMinXungQuanh = 0;
        }
    }
	// Ðat mìn ngau nhiên
    int count = 0; 
    while (count < 10) {
        int x = rand() % 10; 
        int y = rand() % 10;
        if (!board[x][y].laMin) { 
            board[x][y].laMin = true;
            count++;
        }
    }
     // Tính so mìn xung quanh
    for (int i = 0; i < 10; i++) {
        for (int j = 0; j < 10; j++) { 
            if (board[i][j].laMin) continue; 
            int dem = 0;
            for (int dx = -1; dx <= 1; dx++) {
                for (int dy = -1; dy <= 1; dy++) { 
                    int nx = i + dx, ny = j + dy; 
                    if (nx >= 0 && nx < 10 && ny >= 0 && ny < 10) 
                        if (board[nx][ny].laMin) dem++; 
                }
            }
            board[i][j].cacMinXungQuanh = dem;
        }
    }
}
void hienThiBanCo(bool showAll = false) { 
    // In toa do hang cot
	cout << "\n    ";
    for (int j = 0; j < 10; j++) cout << j << " ";
    cout << "\n";
	// vong lap qua tung hang
    for (int i = 0; i < 10; i++) {
        cout << i << " | ";
        //vong lap qua tung o
        for (int j = 0; j < 10; j++) {
            if (showAll) { 
                if (board[i][j].laMin) cout << "* "; 
                else cout << board[i][j].cacMinXungQuanh << " "; 
            } else if (!board[i][j].daDuocMo)
                cout << "# "; 
            else if (board[i][j].laMin)
                cout << "* "; 
            else
                cout << board[i][j].cacMinXungQuanh << " "; 
        }
        cout << endl;
    }
}
// Mo o
bool moO(int x, int y) {
    if (x < 0 || x >= 10 || y < 0 || y >= 10) return true; 
    if (board[x][y].daDuocMo) return true; 

    board[x][y].daDuocMo = true; 
    if (board[x][y].laMin) return false; 

    return true;
}


// ktra neu o da mo het-> thang, con chua het-> chua thang
bool kiemTraThang() {
    for (int i = 0; i < 10; i++) 
        for (int j = 0; j < 10; j++) 
            if (!board[i][j].laMin && !board[i][j].daDuocMo) 
                return false;
    return true;
}
int choiGame() {
    int x, y;
    int luotMo = 0; // dem  so luot an toan
    char choice;

    taoBanCo(); // 
    while (true) { 
        hienThiBanCo(); // goi ham
        cout << "\nNhap toa do (hang cot): ";
        cin >> x >> y;

		if (cin.fail()) {
            cin.clear(); 
            cin.ignore(1000, '\n'); 

            cout << "\nBan da nhap ky tu khong hop le!\n";
            cout << "Ban co muon thoat game khong? (y/n): ";
            cin >> choice;

            if (choice == 'y' || choice == 'Y') {
                cout << "\nBan da chon thoat.\n";
                hienThiBanCo(true);
                cout << "So luot mo an toan: " << luotMo << endl;
                return luotMo; 
            } else {
                cout << "\nTiep tuc choi...\n";
                continue;
            }
        }
        if (!moO(x, y)) { // goi ham
            cout << "\n?? Boom! Ban da mo trung min!\n";
            hienThiBanCo(true); 
            cout << "So luot mo an toan: " << luotMo << endl; 
            return luotMo; 
        }

        luotMo++;

        if (kiemTraThang()) {
            cout << "\n?? Chuc mung! Ban da thang!\n";
            hienThiBanCo(true);
            cout << "So luot mo an toan: " << luotMo << endl;
            return luotMo;
        }
    }
}

int main() {
    Player *playerTree = NULL; 
    char ten[50];
    int diem;
    int n;

    cout << "Nhap so luong nguoi choi: ";
    cin >> n;

    cout << "\n=== Bat dau choi game ===\n";
    cout << "=== Nhap danh sach nguoi choi ===\n";

    for (int i = 0; i < n; i++) {
        cout << "\nNhap ten nguoi choi thu " << i + 1 << ": ";
        cin >> ten;

        cout << "\n--- Luot choi cua " << ten << " ---\n";
        diem = choiGame(); 

        if (diem == 0)
            cout << ten << " da thoat som.\n";
        else
            cout << ten << " ket thuc voi " << diem << " diem.\n";

        // Them nguoi choi vào cây diem
        playerTree = insertPlayer(playerTree, ten, diem);

        // Hoi nguoi dùng có muon tiep tuc không (neu chua het danh sách)
        if (i < n - 1) {
            char tieptuc;
            cout << "\nBan co muon tiep tuc choi voi nguoi ke tiep? (y/n): ";
            cin >> tieptuc;
            if (tieptuc == 'n' || tieptuc == 'N') {
                cout << "\nBan da chon dung som. Ket thuc choi.\n";
                break; // thoát khoi vòng lap for
            }
        }
    }

    cout << "\n=== Bang diem (tang dan) ===\n";
    inOrder(playerTree);

    cout << "\nCam on ban da choi tro do min! ??\n";
    return 0;
}
